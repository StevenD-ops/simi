"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionParser = void 0;
const typescript_1 = __importDefault(require("typescript"));
const ObjectType_1 = require("./../Type/ObjectType");
const nodeKey_1 = require("../Utils/nodeKey");
class FunctionParser {
    constructor(childNodeParser) {
        this.childNodeParser = childNodeParser;
    }
    supportsNode(node) {
        return node.kind === typescript_1.default.SyntaxKind.ArrowFunction || node.kind === typescript_1.default.SyntaxKind.FunctionDeclaration;
    }
    createType(node, context) {
        const parameterTypes = node.parameters.map((parameter) => {
            return this.childNodeParser.createType(parameter, context);
        });
        return new ObjectType_1.ObjectType(`object-${nodeKey_1.getKey(node, context)}`, [], parameterTypes.map((parameterType, index) => {
            const required = node.parameters[index].questionToken ? false : !node.parameters[index].initializer;
            return new ObjectType_1.ObjectProperty(node.parameters[index].name.getText(), parameterType, required);
        }), false);
    }
}
exports.FunctionParser = FunctionParser;
//# sourceMappingURL=FunctionParser.js.map